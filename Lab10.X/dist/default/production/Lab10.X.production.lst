

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 02 21:15:56 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294                           
   295                           	psect	idataCOMMON
   296  00FD                     __pidataCOMMON:
   297                           
   298                           ;initializer for _index1
   299  00FD  3401               	retlw	1
   300                           
   301                           	psect	idataBANK0
   302  00B8                     __pidataBANK0:
   303                           
   304                           ;initializer for _msg1
   305  00B8  3448               	retlw	72
   306  00B9  346F               	retlw	111
   307  00BA  346C               	retlw	108
   308  00BB  3469               	retlw	105
   309  00BC  3477               	retlw	119
   310  00BD  3469               	retlw	105
   311  00BE  3473               	retlw	115
   312  00BF  340D               	retlw	13
   313  00C0  340A               	retlw	10
   314                           
   315                           ;initializer for _msg
   316  00C1  3444               	retlw	68
   317  00C2  3461               	retlw	97
   318  00C3  3474               	retlw	116
   319  00C4  346F               	retlw	111
   320  00C5  343A               	retlw	58
   321  00C6  3420               	retlw	32
   322  00C7  3420               	retlw	32
   323  00C8  340D               	retlw	13
   324  00C9  340A               	retlw	10
   325                           
   326                           	psect	nvCOMMON
   327  0078                     __pnvCOMMON:
   328  0078                     _index:
   329  0078                     	ds	1
   330  000B                     _INTCONbits	set	11
   331  0018                     _RCSTAbits	set	24
   332  0008                     _PORTD	set	8
   333  0019                     _TXREG	set	25
   334  001A                     _RCREG	set	26
   335  000C                     _PIR1bits	set	12
   336  008C                     _PIE1bits	set	140
   337  009A                     _SPBRGH	set	154
   338  0099                     _SPBRG	set	153
   339  0098                     _TXSTAbits	set	152
   340  008F                     _OSCCONbits	set	143
   341  0088                     _TRISD	set	136
   342  0187                     _BAUDCTLbits	set	391
   343  0189                     _ANSELH	set	393
   344  0188                     _ANSEL	set	392
   345                           
   346                           	psect	strings
   347  00CA                     __pstrings:
   348  00CA                     stringtab:
   349  00CA                     __stringtab:
   350  00CA                     stringcode:	
   351                           ;	String table - string pointers are 1 byte each
   352                           
   353  00CA                     stringdir:
   354  00CA  3000               	movlw	high stringdir
   355  00CB  008A               	movwf	10
   356  00CC  0804               	movf	4,w
   357  00CD  0A84               	incf	4,f
   358  00CE  0782               	addwf	2,f
   359  00CF                     __stringbase:
   360  00CF  3400               	retlw	0
   361  00D0                     __end_of__stringtab:
   362  00D0                     STR_1:
   363  00D0  3448               	retlw	72	;'H'
   364  00D1  344F               	retlw	79	;'O'
   365  00D2  344C               	retlw	76	;'L'
   366  00D3  3449               	retlw	73	;'I'
   367  00D4  3457               	retlw	87	;'W'
   368  00D5  3449               	retlw	73	;'I'
   369  00D6  3453               	retlw	83	;'S'
   370  00D7  3420               	retlw	32	;' '
   371  00D8  3420               	retlw	32	;' '
   372  00D9  340D               	retlw	13
   373  00DA  3400               	retlw	0
   374                           
   375                           	psect	cinit
   376  000F                     start_initialization:	
   377                           ; #config settings
   378                           
   379  000F                     __initialization:
   380                           
   381                           ; Initialize objects allocated to BANK0
   382  000F  1383               	bcf	3,7	;select IRP bank0
   383  0010  3032               	movlw	low (__pdataBANK0+18)
   384  0011  00FD               	movwf	btemp+-1
   385  0012  3000               	movlw	high __pidataBANK0
   386  0013  00FE               	movwf	btemp
   387  0014  30B8               	movlw	low __pidataBANK0
   388  0015  00FF               	movwf	btemp+1
   389  0016  3020               	movlw	low __pdataBANK0
   390  0017  0084               	movwf	4
   391  0018  120A  118A  20A9  120A  118A  	fcall	init_ram0
   392                           
   393                           ; Initialize objects allocated to COMMON
   394  001D  120A  118A  20FD  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   395  0022  00FA               	movwf	__pdataCOMMON& (0+127)
   396                           
   397                           ; Clear objects allocated to COMMON
   398  0023  01F9               	clrf	__pbssCOMMON& (0+127)
   399  0024                     end_of_initialization:	
   400                           ;End of C runtime variable initialization code
   401                           
   402  0024                     __end_of__initialization:
   403  0024  0183               	clrf	3
   404  0025  120A  118A  28DB   	ljmp	_main	;jump to C main() function
   405                           
   406                           	psect	bssCOMMON
   407  0079                     __pbssCOMMON:
   408  0079                     _oldvalue:
   409  0079                     	ds	1
   410                           
   411                           	psect	dataCOMMON
   412  007A                     __pdataCOMMON:
   413  007A                     _index1:
   414  007A                     	ds	1
   415                           
   416                           	psect	dataBANK0
   417  0020                     __pdataBANK0:
   418  0020                     _msg1:
   419  0020                     	ds	9
   420  0029                     _msg:
   421  0029                     	ds	9
   422                           
   423                           	psect	inittext
   424  00A5                     init_fetch0:	
   425                           ;	Called with low address in FSR and high address in W
   426                           
   427  00A5  087E               	movf	btemp,w
   428  00A6  008A               	movwf	10
   429  00A7  087F               	movf	btemp+1,w
   430  00A8  0082               	movwf	2
   431  00A9                     init_ram0:	
   432                           ;Called with:
   433                           ;	high address of idata address in btemp 
   434                           ;	low address of idata address in btemp+1 
   435                           ;	low address of data in FSR
   436                           ;	high address + 1 of data in btemp-1
   437                           
   438  00A9  120A  118A  20A5  120A  118A  	fcall	init_fetch0
   439  00AE  0080               	movwf	0
   440  00AF  0A84               	incf	4,f
   441  00B0  0804               	movf	4,w
   442  00B1  067D               	xorwf	btemp+-1,w
   443  00B2  1903               	btfsc	3,2
   444  00B3  3400               	retlw	0
   445  00B4  0AFF               	incf	btemp+1,f
   446  00B5  1903               	btfsc	3,2
   447  00B6  0AFE               	incf	btemp,f
   448  00B7  28A9               	goto	init_ram0
   449                           
   450                           	psect	cstackCOMMON
   451  0070                     __pcstackCOMMON:
   452  0070                     ?_setup:
   453  0070                     ?_send:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_isr:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ??_isr:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_main:	
   463                           ; 1 bytes @ 0x0
   464                           
   465                           
   466                           ; 1 bytes @ 0x0
   467  0070                     	ds	3
   468  0073                     ??_setup:
   469  0073                     ?_strlen:	
   470                           ; 1 bytes @ 0x3
   471                           
   472                           
   473                           ; 2 bytes @ 0x3
   474  0073                     	ds	2
   475  0075                     ??_strlen:
   476                           
   477                           ; 1 bytes @ 0x5
   478  0075                     	ds	1
   479  0076                     strlen@s:
   480                           
   481                           ; 1 bytes @ 0x6
   482  0076                     	ds	1
   483  0077                     strlen@cp:
   484                           
   485                           ; 1 bytes @ 0x7
   486  0077                     	ds	1
   487  0078                     ??_main:
   488                           
   489                           	psect	cstackBANK0
   490  0032                     __pcstackBANK0:	
   491                           ; 1 bytes @ 0x8
   492                           
   493  0032                     ??_send:
   494                           
   495                           ; 1 bytes @ 0x0
   496  0032                     	ds	1
   497  0033                     send@x:
   498                           
   499                           ; 1 bytes @ 0x1
   500  0033                     	ds	1
   501                           
   502                           	psect	maintext
   503  00DB                     __pmaintext:	
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 62 in file "Lab10.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : B00/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels required when called: 4
   529 ;; This function calls:
   530 ;;		_send
   531 ;;		_setup
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537  00DB                     _main:	
   538                           ;psect for function _main
   539                           
   540  00DB                     l799:	
   541                           ;incstack = 0
   542                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   543                           
   544                           
   545                           ;Lab10.c: 63:     setup();
   546  00DB  120A  118A  205D  120A  118A  	fcall	_setup
   547  00E0                     l801:
   548                           
   549                           ;Lab10.c: 65:         index = 0;
   550  00E0  01F8               	clrf	_index
   551  00E1                     l803:
   552                           
   553                           ;Lab10.c: 66:         index1 = 0;
   554  00E1  01FA               	clrf	_index1
   555  00E2                     l805:
   556                           
   557                           ;Lab10.c: 67:         send("HOLIWIS  \r");
   558  00E2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   559  00E3  120A  118A  2028  120A  118A  	fcall	_send
   560  00E8  28E0               	goto	l801
   561  00E9  120A  118A  280C   	ljmp	start
   562  00EC                     __end_of_main:
   563                           
   564                           	psect	text1
   565  005D                     __ptext1:	
   566 ;; *************** function _setup *****************
   567 ;; Defined at:
   568 ;;		line 14 in file "setup.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0
   585 ;;      Totals:         0       0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels used: 1
   588 ;; Hardware stack levels required when called: 1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596  005D                     _setup:	
   597                           ;psect for function _setup
   598                           
   599  005D                     l679:	
   600                           ;incstack = 0
   601                           ; Regs used in _setup: [wreg+status,2+status,0]
   602                           
   603                           
   604                           ;setup.c: 15:     ANSEL = 0;
   605  005D  1683               	bsf	3,5	;RP0=1, select bank3
   606  005E  1703               	bsf	3,6	;RP1=1, select bank3
   607  005F  0188               	clrf	8	;volatile
   608                           
   609                           ;setup.c: 16:     ANSELH = 0;
   610  0060  0189               	clrf	9	;volatile
   611                           
   612                           ;setup.c: 18:     TRISD = 0;
   613  0061  1683               	bsf	3,5	;RP0=1, select bank1
   614  0062  1303               	bcf	3,6	;RP1=0, select bank1
   615  0063  0188               	clrf	8	;volatile
   616                           
   617                           ;setup.c: 19:     PORTD = 0;
   618  0064  1283               	bcf	3,5	;RP0=0, select bank0
   619  0065  1303               	bcf	3,6	;RP1=0, select bank0
   620  0066  0188               	clrf	8	;volatile
   621  0067                     l681:
   622                           
   623                           ;setup.c: 21:     OSCCONbits.IRCF = 0b100;
   624  0067  1683               	bsf	3,5	;RP0=1, select bank1
   625  0068  1303               	bcf	3,6	;RP1=0, select bank1
   626  0069  080F               	movf	15,w	;volatile
   627  006A  398F               	andlw	-113
   628  006B  3840               	iorlw	64
   629  006C  008F               	movwf	15	;volatile
   630  006D                     l683:
   631                           
   632                           ;setup.c: 22:     OSCCONbits.SCS = 1;
   633  006D  140F               	bsf	15,0	;volatile
   634  006E                     l685:
   635                           
   636                           ;setup.c: 26:     TXSTAbits.SYNC = 0;
   637  006E  1218               	bcf	24,4	;volatile
   638  006F                     l687:
   639                           
   640                           ;setup.c: 27:     TXSTAbits.BRGH = 1;
   641  006F  1518               	bsf	24,2	;volatile
   642  0070                     l689:
   643                           
   644                           ;setup.c: 28:     BAUDCTLbits.BRG16 = 1;
   645  0070  1683               	bsf	3,5	;RP0=1, select bank3
   646  0071  1703               	bsf	3,6	;RP1=1, select bank3
   647  0072  1587               	bsf	7,3	;volatile
   648  0073                     l691:
   649                           
   650                           ;setup.c: 30:     SPBRG = 25;
   651  0073  3019               	movlw	25
   652  0074  1683               	bsf	3,5	;RP0=1, select bank1
   653  0075  1303               	bcf	3,6	;RP1=0, select bank1
   654  0076  0099               	movwf	25	;volatile
   655  0077                     l693:
   656                           
   657                           ;setup.c: 31:     SPBRGH = 0;
   658  0077  019A               	clrf	26	;volatile
   659  0078                     l695:
   660                           
   661                           ;setup.c: 33:     RCSTAbits.SPEN = 1;
   662  0078  1283               	bcf	3,5	;RP0=0, select bank0
   663  0079  1303               	bcf	3,6	;RP1=0, select bank0
   664  007A  1798               	bsf	24,7	;volatile
   665  007B                     l697:
   666                           
   667                           ;setup.c: 34:     TXSTAbits.TX9 = 0;
   668  007B  1683               	bsf	3,5	;RP0=1, select bank1
   669  007C  1303               	bcf	3,6	;RP1=0, select bank1
   670  007D  1318               	bcf	24,6	;volatile
   671  007E                     l699:
   672                           
   673                           ;setup.c: 35:     TXSTAbits.TXEN = 1;
   674  007E  1698               	bsf	24,5	;volatile
   675  007F                     l701:
   676                           
   677                           ;setup.c: 36:     RCSTAbits.CREN = 1;
   678  007F  1283               	bcf	3,5	;RP0=0, select bank0
   679  0080  1303               	bcf	3,6	;RP1=0, select bank0
   680  0081  1618               	bsf	24,4	;volatile
   681  0082                     l703:
   682                           
   683                           ;setup.c: 39:     INTCONbits.GIE = 1;
   684  0082  178B               	bsf	11,7	;volatile
   685  0083                     l705:
   686                           
   687                           ;setup.c: 40:     INTCONbits.PEIE = 1;
   688  0083  170B               	bsf	11,6	;volatile
   689  0084                     l707:
   690                           
   691                           ;setup.c: 41:     PIE1bits.RCIE = 1;
   692  0084  1683               	bsf	3,5	;RP0=1, select bank1
   693  0085  1303               	bcf	3,6	;RP1=0, select bank1
   694  0086  168C               	bsf	12,5	;volatile
   695  0087                     l71:
   696  0087  0008               	return
   697  0088                     __end_of_setup:
   698                           
   699                           	psect	text2
   700  0028                     __ptext2:	
   701 ;; *************** function _send *****************
   702 ;; Defined at:
   703 ;;		line 74 in file "Lab10.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;  x               1    wreg     PTR unsigned char 
   706 ;;		 -> STR_1(11), 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  x               1    1[BANK0 ] PTR unsigned char 
   709 ;;		 -> STR_1(11), 
   710 ;;  size            2    0        int 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       0       0       0       0
   721 ;;      Locals:         0       1       0       0       0
   722 ;;      Temps:          0       1       0       0       0
   723 ;;      Totals:         0       2       0       0       0
   724 ;;Total ram usage:        2 bytes
   725 ;; Hardware stack levels used: 1
   726 ;; Hardware stack levels required when called: 3
   727 ;; This function calls:
   728 ;;		_strlen
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734  0028                     _send:	
   735                           ;psect for function _send
   736                           
   737                           
   738                           ;incstack = 0
   739                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   740                           ;send@x stored from wreg
   741  0028  1283               	bcf	3,5	;RP0=0, select bank0
   742  0029  1303               	bcf	3,6	;RP1=0, select bank0
   743  002A  00B3               	movwf	send@x
   744  002B                     l785:
   745  002B  0833               	movf	send@x,w
   746  002C  120A  118A  2088  120A  118A  	fcall	_strlen
   747  0031                     l787:
   748                           
   749                           ;Lab10.c: 79:        if (oldvalue != msg[6] ){
   750  0031  1283               	bcf	3,5	;RP0=0, select bank0
   751  0032  1303               	bcf	3,6	;RP1=0, select bank0
   752  0033  082F               	movf	_msg+6,w
   753  0034  0679               	xorwf	_oldvalue,w
   754  0035  1903               	skipnz
   755  0036  2838               	goto	u121
   756  0037  2839               	goto	u120
   757  0038                     u121:
   758  0038  285C               	goto	l44
   759  0039                     u120:
   760  0039  284F               	goto	l797
   761  003A                     l41:
   762                           
   763                           ;Lab10.c: 81:                 if (PIR1bits.TXIF){
   764  003A  1E0C               	btfss	12,4	;volatile
   765  003B  283D               	goto	u131
   766  003C  283E               	goto	u130
   767  003D                     u131:
   768  003D  284B               	goto	l795
   769  003E                     u130:
   770  003E                     l791:
   771                           
   772                           ;Lab10.c: 82:                     TXREG = x[index1];
   773  003E  087A               	movf	_index1,w
   774  003F  0733               	addwf	send@x,w
   775  0040  0084               	movwf	4
   776  0041  120A  118A  20CA  120A  118A  	fcall	stringdir
   777  0046  0099               	movwf	25	;volatile
   778  0047                     l793:
   779                           
   780                           ;Lab10.c: 83:                     index1++;
   781  0047  3001               	movlw	1
   782  0048  00B2               	movwf	??_send
   783  0049  0832               	movf	??_send,w
   784  004A  07FA               	addwf	_index1,f
   785  004B                     l795:
   786                           
   787                           ;Lab10.c: 86:                 oldvalue = msg[6];
   788  004B  082F               	movf	_msg+6,w
   789  004C  00B2               	movwf	??_send
   790  004D  0832               	movf	??_send,w
   791  004E  00F9               	movwf	_oldvalue
   792  004F                     l797:
   793                           
   794                           ;Lab10.c: 80:             while(x[index1] != 0){
   795  004F  087A               	movf	_index1,w
   796  0050  0733               	addwf	send@x,w
   797  0051  0084               	movwf	4
   798  0052  120A  118A  20CA  120A  118A  	fcall	stringdir
   799  0057  3A00               	xorlw	0
   800  0058  1D03               	skipz
   801  0059  285B               	goto	u141
   802  005A  285C               	goto	u140
   803  005B                     u141:
   804  005B  283A               	goto	l41
   805  005C                     u140:
   806  005C                     l44:
   807  005C  0008               	return
   808  005D                     __end_of_send:
   809                           
   810                           	psect	text3
   811  0088                     __ptext3:	
   812 ;; *************** function _strlen *****************
   813 ;; Defined at:
   814 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  s               1    wreg     PTR const unsigned char 
   817 ;;		 -> STR_1(11), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  s               1    6[COMMON] PTR const unsigned char 
   820 ;;		 -> STR_1(11), 
   821 ;;  cp              1    7[COMMON] PTR const unsigned char 
   822 ;;		 -> STR_1(11), 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  2    3[COMMON] unsigned int 
   825 ;; Registers used:
   826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         2       0       0       0       0
   833 ;;      Locals:         2       0       0       0       0
   834 ;;      Temps:          1       0       0       0       0
   835 ;;      Totals:         5       0       0       0       0
   836 ;;Total ram usage:        5 bytes
   837 ;; Hardware stack levels used: 2
   838 ;; Hardware stack levels required when called: 1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_send
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846  0088                     _strlen:	
   847                           ;psect for function _strlen
   848                           
   849                           
   850                           ;incstack = 0
   851                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
   852                           ;strlen@s stored from wreg
   853  0088  00F6               	movwf	strlen@s
   854  0089                     l775:
   855  0089  0876               	movf	strlen@s,w
   856  008A  00F5               	movwf	??_strlen
   857  008B  0875               	movf	??_strlen,w
   858  008C  00F7               	movwf	strlen@cp
   859  008D  2892               	goto	l779
   860  008E                     l777:
   861  008E  3001               	movlw	1
   862  008F  00F5               	movwf	??_strlen
   863  0090  0875               	movf	??_strlen,w
   864  0091  07F7               	addwf	strlen@cp,f
   865  0092                     l779:
   866  0092  0877               	movf	strlen@cp,w
   867  0093  0084               	movwf	4
   868  0094  120A  118A  20CA  120A  118A  	fcall	stringdir
   869  0099  3A00               	xorlw	0
   870  009A  1D03               	skipz
   871  009B  289D               	goto	u111
   872  009C  289E               	goto	u110
   873  009D                     u111:
   874  009D  288E               	goto	l777
   875  009E                     u110:
   876  009E                     l781:
   877  009E  0876               	movf	strlen@s,w
   878  009F  0277               	subwf	strlen@cp,w
   879  00A0  00F3               	movwf	?_strlen
   880  00A1  01F4               	clrf	?_strlen+1
   881  00A2  1BF3               	btfsc	?_strlen,7
   882  00A3  03F4               	decf	?_strlen+1,f
   883  00A4                     l611:
   884  00A4  0008               	return
   885  00A5                     __end_of_strlen:
   886                           
   887                           	psect	text4
   888  00EC                     __ptext4:	
   889 ;; *************** function _isr *****************
   890 ;; Defined at:
   891 ;;		line 51 in file "Lab10.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0
   907 ;;      Temps:          3       0       0       0       0
   908 ;;      Totals:         3       0       0       0       0
   909 ;;Total ram usage:        3 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		Interrupt level 1
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918  00EC                     _isr:	
   919                           ;psect for function _isr
   920                           
   921  00EC                     i1l761:
   922                           
   923                           ;Lab10.c: 52:     if(PIR1bits.RCIF){
   924  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   925  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   926  00EE  1E8C               	btfss	12,5	;volatile
   927  00EF  28F1               	goto	u10_21
   928  00F0  28F2               	goto	u10_20
   929  00F1                     u10_21:
   930  00F1  28F6               	goto	i1l28
   931  00F2                     u10_20:
   932  00F2                     i1l763:
   933                           
   934                           ;Lab10.c: 54:         msg[6] = RCREG;
   935  00F2  081A               	movf	26,w	;volatile
   936  00F3  00F0               	movwf	??_isr
   937  00F4  0870               	movf	??_isr,w
   938  00F5  00AF               	movwf	_msg+6
   939  00F6                     i1l28:
   940  00F6  0872               	movf	??_isr+2,w
   941  00F7  008A               	movwf	10
   942  00F8  0E71               	swapf	??_isr+1,w
   943  00F9  0083               	movwf	3
   944  00FA  0EFE               	swapf	btemp,f
   945  00FB  0E7E               	swapf	btemp,w
   946  00FC  0009               	retfie
   947  00FD                     __end_of_isr:
   948  007E                     btemp	set	126	;btemp
   949  007E                     wtemp0	set	126
   950                           
   951                           	psect	intentry
   952  0004                     __pintentry:	
   953                           ;incstack = 0
   954                           ; Regs used in _isr: [wreg]
   955                           
   956  0004                     interrupt_function:
   957  007E                     saved_w	set	btemp
   958  0004  00FE               	movwf	btemp
   959  0005  0E03               	swapf	3,w
   960  0006  00F1               	movwf	??_isr+1
   961  0007  080A               	movf	10,w
   962  0008  00F2               	movwf	??_isr+2
   963  0009  120A  118A  28EC   	ljmp	_isr
   964                           
   965                           	psect	idloc
   966                           
   967                           ;Config register IDLOC0 @ 0x2000
   968                           ;	unspecified, using default values
   969  2000                     	org	8192
   970  2000  3FFF               	dw	16383
   971                           
   972                           ;Config register IDLOC1 @ 0x2001
   973                           ;	unspecified, using default values
   974  2001                     	org	8193
   975  2001  3FFF               	dw	16383
   976                           
   977                           ;Config register IDLOC2 @ 0x2002
   978                           ;	unspecified, using default values
   979  2002                     	org	8194
   980  2002  3FFF               	dw	16383
   981                           
   982                           ;Config register IDLOC3 @ 0x2003
   983                           ;	unspecified, using default values
   984  2003                     	org	8195
   985  2003  3FFF               	dw	16383
   986                           
   987                           	psect	config
   988                           
   989                           ;Config register CONFIG1 @ 0x2007
   990                           ;	Oscillator Selection bits
   991                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   992                           ;	Watchdog Timer Enable bit
   993                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   994                           ;	Power-up Timer Enable bit
   995                           ;	PWRTE = OFF, PWRT disabled
   996                           ;	RE3/MCLR pin function select bit
   997                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   998                           ;	Code Protection bit
   999                           ;	CP = OFF, Program memory code protection is disabled
  1000                           ;	Data Code Protection bit
  1001                           ;	CPD = OFF, Data memory code protection is disabled
  1002                           ;	Brown Out Reset Selection bits
  1003                           ;	BOREN = OFF, BOR disabled
  1004                           ;	Internal External Switchover bit
  1005                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1006                           ;	Fail-Safe Clock Monitor Enabled bit
  1007                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1008                           ;	Low Voltage Programming Enable bit
  1009                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1010                           ;	In-Circuit Debugger Mode bit
  1011                           ;	DEBUG = 0x1, unprogrammed default
  1012  2007                     	org	8199
  1013  2007  20D4               	dw	8404
  1014                           
  1015                           ;Config register CONFIG2 @ 0x2008
  1016                           ;	Brown-out Reset Selection bit
  1017                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1018                           ;	Flash Program Memory Self Write Enable bits
  1019                           ;	WRT = OFF, Write protection off
  1020  2008                     	org	8200
  1021  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    0
    Data        19
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      2      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 

    send@x	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _send->_strlen

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_send

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     298
                               _send
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send                                                 4     4      0     298
                                              0 BANK0      2     2      0
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     166
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _send
     _strlen
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 02 21:15:56 2022

                      pc 0002                       l41 003A                       l44 005C  
                     l71 0087                       fsr 0004                      l611 00A4  
                    l701 007F                      l703 0082                      l705 0083  
                    l801 00E0                      l707 0084                      l803 00E1  
                    l805 00E2                      l681 0067                      l691 0073  
                    l683 006D                      l781 009E                      l693 0077  
                    l685 006E                      l775 0089                      l791 003E  
                    l695 0078                      l687 006F                      l679 005D  
                    l777 008E                      l793 0047                      l785 002B  
                    l697 007B                      l689 0070                      l779 0092  
                    l795 004B                      l787 0031                      l699 007E  
                    l797 004F                      l799 00DB                      u110 009E  
                    u111 009D                      u120 0039                      u121 0038  
                    u130 003E                      u131 003D                      u140 005C  
                    u141 005B                      _isr 00EC                      _msg 0029  
                    fsr0 0004                      indf 0000                     ?_isr 0070  
                   STR_1 00D0                     i1l28 00F6                     _main 00DB  
                   _msg1 0020                     _send 0028                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  ?_send 0070                    _ANSEL 0188                    i1l761 00EC  
                  i1l763 00F2                    _RCREG 001A                    u10_20 00F2  
                  u10_21 00F1                    _SPBRG 0099                    _PORTD 0008  
                  _TRISD 0088                    _TXREG 0019                    _index 0078  
                  _setup 005D                    pclath 000A                    send@x 0033  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00EC             __end_of_send 005D                   ??_main 0078  
                 ??_send 0032                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A                   _index1 007A                   _strlen 0088  
           __pdataCOMMON 007A                   saved_w 007E  __end_of__initialization 0024  
         __pcstackCOMMON 0070             __pidataBANK0 00B8            __end_of_setup 0088  
                ??_setup 0073               __pnvCOMMON 0078               __pmaintext 00DB  
             __pintentry 0004                  ?_strlen 0073               __stringtab 00CA  
                __ptext1 005D                  __ptext2 0028                  __ptext3 0088  
                __ptext4 00EC     end_of_initialization 0024                _RCSTAbits 0018  
                strlen@s 0076                _TXSTAbits 0098            __pidataCOMMON 00FD  
            _BAUDCTLbits 0187           __end_of_strlen 00A5      start_initialization 000F  
            __end_of_isr 00FD               init_fetch0 00A5              __pdataBANK0 0020  
               ??_strlen 0075              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0032                __pstrings 00CA        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C              __stringbase 00CF  
     __end_of__stringtab 00D0                 _oldvalue 0079               _INTCONbits 000B  
               init_ram0 00A9                 intlevel1 0000                stringcode 00CA  
             _OSCCONbits 008F                 strlen@cp 0077                 stringdir 00CA  
               stringtab 00CA  
